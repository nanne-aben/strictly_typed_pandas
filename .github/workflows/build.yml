name: Python package

on: [pull_request, workflow_dispatch]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          pip install -e .
      - name: Lint with isort
        run: isort --check .
      - name: Lint with black
        run: black --check .
      - name: Lint with docformatter
        run: docformatter --black -c **/*.py
      - name: Lint with flake8
        run: flake8
      - name: Lint with mypy
        run: mypy .
      - name: Test with pytest
        run: |
          coverage run -m pytest --stp-typeguard-packages=tests
          coverage report -m
      - name: Run notebooks
        run: |
          for FILE in docs/source/*.ipynb; do
            BASE=$(basename $FILE)
            cp $FILE .
            jupyter nbconvert --to notebook $BASE --execute
          done
      - name: Run pytest with --typeguard-packages for backwards compatibility
        run: |
          pytest --typeguard-packages=tests
      - name: Run pytest with compatible typeguard installed
        run: |
          pip install typeguard==2.13.2
          pytest --typeguard-packages=tests
          pytest --stp-typeguard-packages=tests
      - name: Run pytest with incompatible typeguard installed
        run: |
          pip install typeguard==4.1.5
          pytest --stp-typeguard-packages=tests
